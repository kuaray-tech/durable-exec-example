package com.example.order.controller;

import com.example.order.entity.Order;
import com.example.order.repository.OrderRepository;
import com.example.order.service.OrderService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
 * REST controller exposing endpoints to create and list orders.  Creating
 * an order triggers the Temporal workflow defined in the order service.
 */
@RestController
@RequestMapping("/orders")
@RequiredArgsConstructor
public class OrderController {

    private final OrderService orderService;
    private final OrderRepository orderRepository;

    /**
     * Creates a new order and starts its workflow.  The request body only
     * includes the productId, price and quantity because the id is
     * generated by the database.
     *
     * @param order the order payload
     * @return the persisted order with its id
     */
    @PostMapping
    public ResponseEntity<Order> createOrder(@Validated @RequestBody Order order) {
        Order created = orderService.createOrder(order);
        return ResponseEntity.ok(created);
    }

    /**
     * Returns all orders from the database.  This endpoint is readâ€‘only.
     *
     * @return list of all orders
     */
    @GetMapping
    public ResponseEntity<List<Order>> getOrders() {
        return ResponseEntity.ok(orderRepository.findAll());
    }
}